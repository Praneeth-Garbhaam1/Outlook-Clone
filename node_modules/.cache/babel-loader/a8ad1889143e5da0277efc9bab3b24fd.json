{"ast":null,"code":"var _jsxFileName = \"/home/sai.p@ameexusa.net/Pictures/outlook/src/Components/pages/secondheader.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\nimport { IBasePickerSuggestionsProps, NormalPeoplePicker, ValidationState } from '@fluentui/react/lib/Pickers';\nimport { people, mru } from '@uifabric/example-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction secondheader() {\n  _s();\n\n  const [delayResults, setDelayResults] = React.useState(false);\n  const [isPickerDisabled, setIsPickerDisabled] = React.useState(false);\n  const [mostRecentlyUsed, setMostRecentlyUsed] = React.useState < IPersonaProps > mru;\n  const [peopleList, setPeopleList] = React.useState < IPersonaProps > people;\n  const picker = React.useRef(null);\n  const suggestionProps = {\n    suggestionsHeaderText: 'Suggested People',\n    mostRecentlyUsedHeaderText: 'Suggested Contacts',\n    noResultsFoundText: 'No results found',\n    loadingText: 'Loading',\n    showRemoveButtons: true,\n    suggestionsAvailableAlertText: 'People Picker Suggestions available',\n    suggestionsContainerAriaLabel: 'Suggested contacts'\n  };\n\n  const onFilterChanged = (filterText, currentPersonas, limitResults) => {\n    if (filterText) {\n      let filteredPersonas = filterPersonasByText(filterText);\n      filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\n      return filterPromise(filteredPersonas);\n    } else {\n      return [];\n    }\n  };\n\n  const returnMostRecentlyUsed = currentPersonas => {\n    return filterPromise(removeDuplicates(mostRecentlyUsed, currentPersonas));\n  };\n\n  const onRemoveSuggestion = item => {\n    const indexPeopleList = peopleList.indexOf(item);\n    const indexMostRecentlyUsed = mostRecentlyUsed.indexOf(item);\n\n    if (indexPeopleList >= 0) {\n      const newPeople = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\n      setPeopleList(newPeople);\n    }\n\n    if (indexMostRecentlyUsed >= 0) {\n      const newSuggestedPeople = mostRecentlyUsed.slice(0, indexMostRecentlyUsed).concat(mostRecentlyUsed.slice(indexMostRecentlyUsed + 1));\n      setMostRecentlyUsed(newSuggestedPeople);\n    }\n  };\n\n  const onDisabledButtonClick = () => {\n    setIsPickerDisabled(!isPickerDisabled);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NormalPeoplePicker // eslint-disable-next-line react/jsx-no-bind\n    , {\n      onResolveSuggestions: onFilterChanged // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onEmptyInputFocus: returnMostRecentlyUsed,\n      getTextFromItem: getTextFromItem,\n      pickerSuggestionsProps: suggestionProps,\n      className: 'ms-PeoplePicker',\n      // eslint-disable-next-line react/jsx-no-bind\n      onRemoveSuggestion: onRemoveSuggestion,\n      onValidateInput: validateInput,\n      removeButtonAriaLabel: 'Remove',\n      inputProps: {\n        onBlur: ev => console.log('onBlur called'),\n        onFocus: ev => console.log('onFocus called'),\n        'aria-label': 'People Picker'\n      },\n      componentRef: picker,\n      onInputChange: onInputChange,\n      resolveDelay: 300,\n      disabled: isPickerDisabled\n    }, 'normal', false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: \"Disable People Picker\",\n      checked: isPickerDisabled // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onChange: onDisabledButtonClick,\n      styles: checkboxStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: \"Delay Suggestion Results\",\n      defaultChecked: delayResults // eslint-disable-next-line react/jsx-no-bind\n      ,\n      onChange: onToggleDelayResultsChange,\n      styles: checkboxStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n\n  function getTextFromItem(persona) {\n    return persona.text;\n  }\n\n  function validateInput(input) {\n    if (input.indexOf('@') !== -1) {\n      return ValidationState.valid;\n    } else if (input.length > 1) {\n      return ValidationState.warning;\n    } else {\n      return ValidationState.invalid;\n    }\n  }\n\n  function onInputChange(input) {\n    const outlookRegEx = /<.*>/g;\n    const emailAddress = outlookRegEx.exec(input);\n\n    if (emailAddress && emailAddress[0]) {\n      return emailAddress[0].substring(1, emailAddress[0].length - 1);\n    }\n\n    return input;\n  }\n}\n\n_s(secondheader, \"nBGTMSnqGNgEoS77OV+wc8jqUxM=\");\n\nexport default secondheader;","map":{"version":3,"sources":["/home/sai.p@ameexusa.net/Pictures/outlook/src/Components/pages/secondheader.js"],"names":["React","IPersonaProps","IBasePickerSuggestionsProps","NormalPeoplePicker","ValidationState","people","mru","secondheader","delayResults","setDelayResults","useState","isPickerDisabled","setIsPickerDisabled","mostRecentlyUsed","setMostRecentlyUsed","peopleList","setPeopleList","picker","useRef","suggestionProps","suggestionsHeaderText","mostRecentlyUsedHeaderText","noResultsFoundText","loadingText","showRemoveButtons","suggestionsAvailableAlertText","suggestionsContainerAriaLabel","onFilterChanged","filterText","currentPersonas","limitResults","filteredPersonas","filterPersonasByText","removeDuplicates","slice","filterPromise","returnMostRecentlyUsed","onRemoveSuggestion","item","indexPeopleList","indexOf","indexMostRecentlyUsed","newPeople","concat","newSuggestedPeople","onDisabledButtonClick","getTextFromItem","validateInput","onBlur","ev","console","log","onFocus","onInputChange","checkboxStyles","onToggleDelayResultsChange","persona","text","input","valid","length","warning","invalid","outlookRegEx","emailAddress","exec","substring"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\nimport { IBasePickerSuggestionsProps, NormalPeoplePicker, ValidationState } from '@fluentui/react/lib/Pickers';\nimport { people, mru } from '@uifabric/example-data';\n\nfunction secondheader() {\n    const [delayResults, setDelayResults] = React.useState(false);\n    const [isPickerDisabled, setIsPickerDisabled] = React.useState(false);\n    const [mostRecentlyUsed, setMostRecentlyUsed] = React.useState<IPersonaProps>(mru);\n    const [peopleList, setPeopleList] = React.useState<IPersonaProps>(people);\n  \n    const picker = React.useRef(null);\n\nconst suggestionProps: IBasePickerSuggestionsProps = {\n    suggestionsHeaderText: 'Suggested People',\n    mostRecentlyUsedHeaderText: 'Suggested Contacts',\n    noResultsFoundText: 'No results found',\n    loadingText: 'Loading',\n    showRemoveButtons: true,\n    suggestionsAvailableAlertText: 'People Picker Suggestions available',\n    suggestionsContainerAriaLabel: 'Suggested contacts',\n  };\n\n    const onFilterChanged = (\n        filterText: string,\n        currentPersonas: IPersonaProps[],\n        limitResults?: number,\n      ): IPersonaProps[] | Promise<IPersonaProps[]> => {\n        if (filterText) {\n          let filteredPersonas: IPersonaProps[] = filterPersonasByText(filterText);\n    \n          filteredPersonas = removeDuplicates(filteredPersonas, currentPersonas);\n          filteredPersonas = limitResults ? filteredPersonas.slice(0, limitResults) : filteredPersonas;\n          return filterPromise(filteredPersonas);\n        } else {\n          return [];\n        }\n      };\n\n      const returnMostRecentlyUsed = (currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> => {\n        return filterPromise(removeDuplicates(mostRecentlyUsed, currentPersonas));\n      };\n\n      const onRemoveSuggestion = (item: IPersonaProps): void => {\n        const indexPeopleList: number = peopleList.indexOf(item);\n        const indexMostRecentlyUsed: number = mostRecentlyUsed.indexOf(item);\n    \n        if (indexPeopleList >= 0) {\n          const newPeople: IPersonaProps[] = peopleList\n            .slice(0, indexPeopleList)\n            .concat(peopleList.slice(indexPeopleList + 1));\n          setPeopleList(newPeople);\n        }\n    \n        if (indexMostRecentlyUsed >= 0) {\n          const newSuggestedPeople: IPersonaProps[] = mostRecentlyUsed\n            .slice(0, indexMostRecentlyUsed)\n            .concat(mostRecentlyUsed.slice(indexMostRecentlyUsed + 1));\n          setMostRecentlyUsed(newSuggestedPeople);\n        }\n      };\n\n      const onDisabledButtonClick = (): void => {\n        setIsPickerDisabled(!isPickerDisabled);\n      };\n    return (\n        <div>\n             <NormalPeoplePicker\n        // eslint-disable-next-line react/jsx-no-bind\n        onResolveSuggestions={onFilterChanged}\n        // eslint-disable-next-line react/jsx-no-bind\n        onEmptyInputFocus={returnMostRecentlyUsed}\n        getTextFromItem={getTextFromItem}\n        pickerSuggestionsProps={suggestionProps}\n        className={'ms-PeoplePicker'}\n        key={'normal'}\n        // eslint-disable-next-line react/jsx-no-bind\n        onRemoveSuggestion={onRemoveSuggestion}\n        onValidateInput={validateInput}\n        removeButtonAriaLabel={'Remove'}\n        inputProps={{\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker',\n        }}\n        componentRef={picker}\n        onInputChange={onInputChange}\n        resolveDelay={300}\n        disabled={isPickerDisabled}\n      />\n      <Checkbox\n        label=\"Disable People Picker\"\n        checked={isPickerDisabled}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onDisabledButtonClick}\n        styles={checkboxStyles}\n      />\n      <Checkbox\n        label=\"Delay Suggestion Results\"\n        defaultChecked={delayResults}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onToggleDelayResultsChange}\n        styles={checkboxStyles}\n      />\n        </div>\n    )\n    function getTextFromItem(persona: IPersonaProps): string {\n        return persona.text;\n      }\n      function validateInput(input: string): ValidationState {\n        if (input.indexOf('@') !== -1) {\n          return ValidationState.valid;\n        } else if (input.length > 1) {\n          return ValidationState.warning;\n        } else {\n          return ValidationState.invalid;\n        }\n      }\n      function onInputChange(input: string): string {\n        const outlookRegEx = /<.*>/g;\n        const emailAddress = outlookRegEx.exec(input);\n      \n        if (emailAddress && emailAddress[0]) {\n          return emailAddress[0].substring(1, emailAddress[0].length - 1);\n        }\n      \n        return input;\n      }\n}\n\nexport default secondheader\n"]},"metadata":{},"sourceType":"module"}